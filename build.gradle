plugins {
    id 'java'
}

group 'com.anderb.chatbot'
version '0.1.0'

ext {
    functionName = 'chatgpt-bot-function'
    bucketName = project.findProperty('bucket')
    objectKey = project.findProperty('key') ?: "${functionName}.zip"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.12.0'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.765'
    implementation 'org.slf4j:slf4j-api:2.0.12'
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    implementation 'org.telegram:telegrambots:6.9.7.0'
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
}

test {
    useJUnitPlatform()
}

tasks.register('buildZip', Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
    archiveFileName = "${functionName}.zip"
}

build.dependsOn buildZip

tasks.register('deploy', Exec) {
    dependsOn buildZip
    commandLine 'aws', 'lambda', 'update-function-code', '--function-name', functionName, '--zip-file', "fileb://build/distributions/${functionName}.zip"
}

tasks.register('upload', Exec) {
    dependsOn build
    doFirst {
        println "Executing command: aws s3 cp build/distributions/${functionName}.zip s3://${bucketName}/${objectKey}"
    }
    commandLine 'aws', 's3', 'cp', "build/distributions/${functionName}.zip", "s3://${bucketName}/${objectKey}"
}